# This is a basic workflow to help you get started with Actions

name: Integration_test_local_full_node

on:
   pull_request:
   push:
     branches:
       - master

jobs:
  RPC:
    runs-on: ubuntu-latest
    steps:
      - name: STEP-1 :Checkout chain-main repo
        uses: actions/checkout@v2
        with:
          repository: crypto-com/chain-main
          path: chain-main
      - run: |
          cd chain-main 
          rm -rf $HOME/.chain-maind
          NETWORK=testnet make install 
          NETWORK=testnet make build

          ./build/chain-maind unsafe-reset-all

          ./build/chain-maind init testnode --chain-id testnet -o

          ./build/chain-maind keys add validator --keyring-backend test --output json >> ./validator.json
          ./build/chain-maind keys add ecosystem --keyring-backend test --output json >> ./ecosystem.json
          ./build/chain-maind keys add launch --keyring-backend test --output json >> ./launch.json
          ./build/chain-maind keys add community --keyring-backend test --output json >> ./community.json
          ./build/chain-maind keys add reserve --keyring-backend test --output json >> ./reserve.json

          ./build/chain-maind add-genesis-account $(./build/chain-maind keys show validator -a --keyring-backend test) 200tcro
          ./build/chain-maind add-genesis-account $(./build/chain-maind keys show ecosystem -a --keyring-backend test) 200tcro
          ./build/chain-maind add-genesis-account $(./build/chain-maind keys show launch -a --keyring-backend test) 200tcro
          ./build/chain-maind add-genesis-account $(./build/chain-maind keys show community -a --keyring-backend test) 200tcro
          ./build/chain-maind add-genesis-account $(./build/chain-maind keys show reserve -a --keyring-backend test) 200tcro

          ./build/chain-maind gentx validator --amount 100tcro --keyring-backend test  --chain-id testnet

          ./build/chain-maind collect-gentxs

          ./build/chain-maind validate-genesis

          ./build/chain-maind start --trace & 
      - name: Transfer funds to Test accounts
        run: |
          ## Sleep 5 Seconds
          sleep 5
          curl --location --request GET 'localhost:26657/status' | grep network
          cd chain-main
          ## TRANSFER 50CRO to TEST ACCOUNT 1
          # nix-shell ./. -A ci-shell --run "pystarport cli - transfer $(nix-shell ./. -A ci-shell --run "pystarport cli - address ecosystem") cro165tzcrh2yl83g8qeqxueg2g5gzgu57y38vcjcq 5000000000basecro"
          # nix-shell ./. -A ci-shell --run "pystarport cli - balance cro165tzcrh2yl83g8qeqxueg2g5gzgu57y38vcjcq" | grep 500000000

          ## TRANSFER 50CRO to TEST ACCOUNT 2
          # nix-shell ./. -A ci-shell --run "pystarport cli - transfer $(nix-shell ./. -A ci-shell --run "pystarport cli - address ecosystem") cro184lta2lsyu47vwyp2e8zmtca3k5yq85p5dugpq 5000000000basecro"
          # nix-shell ./. -A ci-shell --run "pystarport cli - balance cro184lta2lsyu47vwyp2e8zmtca3k5yq85p5dugpq" | grep 500000000

      - name: STEP-2 :Setup JSLIB project
        uses: actions/checkout@v2
        with:
          path: jslib
      - name: STEP-3 :Setup Node.js for nextgen-jslib
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - uses: actions/cache@v2
        id: cache-deps
        with:
          path: node_modules
          key: ${{ runner.os }}-node${{ matrix.code }}-${{ hashFiles('**/package-lock.json') }}
      - name: Run Integration test suite
        run: |
          ## RUN INTEGRATION TEST
          cd jslib
          npm install
          # npm run integration-test
