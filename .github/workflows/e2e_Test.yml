# This is a basic workflow to help you get started with Actions

name: Integration_test_local_full_node

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  RPC:
    runs-on: ubuntu-latest
    steps:
      - name: STEP-1 :Checkout chain-main repo
        uses: actions/checkout@v2
        with:
          repository: crypto-com/chain-main
          path: chain-main
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build & Start ChainMaind
        run: |
          sudo apt-get install jq
          cd chain-main 
          rm -rf $HOME/.chain-maind
          NETWORK=testnet make install 
          NETWORK=testnet make build

          ./build/chain-maind unsafe-reset-all

          ./build/chain-maind init testnode --chain-id testnet -o

          ./build/chain-maind keys add validator --keyring-backend test --output json >> ./validator.json
          ./build/chain-maind keys add ecosystem --keyring-backend test --output json >> ./ecosystem.json
          ./build/chain-maind keys add launch --keyring-backend test --output json >> ./launch.json
          ./build/chain-maind keys add community --keyring-backend test --output json >> ./community.json
          ./build/chain-maind keys add reserve --keyring-backend test --output json >> ./reserve.json

          ./build/chain-maind add-genesis-account $(./build/chain-maind keys show validator -a --keyring-backend test) 200tcro
          ./build/chain-maind add-genesis-account $(./build/chain-maind keys show ecosystem -a --keyring-backend test) 200tcro
          ./build/chain-maind add-genesis-account $(./build/chain-maind keys show launch -a --keyring-backend test) 200tcro
          ./build/chain-maind add-genesis-account $(./build/chain-maind keys show community -a --keyring-backend test) 200tcro
          ./build/chain-maind add-genesis-account $(./build/chain-maind keys show reserve -a --keyring-backend test) 200tcro

          ./build/chain-maind gentx validator --amount 100tcro --keyring-backend test  --chain-id testnet

          ./build/chain-maind collect-gentxs

          ./build/chain-maind validate-genesis

          ./build/chain-maind start --trace &
      - name: Transfer funds to Test accounts
        run: |
          ## Sleep 5 Seconds
          sleep 5
          curl --location --request GET 'localhost:26657/status' | jq '.'

          cd chain-main  
          ./build/chain-maind keys show validator --bech val --keyring-backend test --output json | jq '.'>> ./validatorDetails.json

          ## TRANSFER 100CRO FROM "ecosystem" to "launch"
          ./build/chain-maind tx bank send $(./build/chain-maind keys show ecosystem -a --keyring-backend test) $(./build/chain-maind keys show launch -a --keyring-backend test) 100tcro --keyring-backend test --chain-id testnet -y | jq '.'

          ## TRANSFER 10CRO FROM "launch" to "ecosystem"
          ./build/chain-maind tx bank send $(./build/chain-maind keys show launch -a --keyring-backend test) $(./build/chain-maind keys show ecosystem -a --keyring-backend test) 10tcro --keyring-backend test --chain-id testnet -y | jq '.'

      - name: STEP-2 :Setup JSLIB project
        uses: actions/checkout@v2
        with:
          path: jslib
      - name: STEP-3 :Setup Node.js for nextgen-jslib
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - uses: actions/cache@v2
        id: cache-deps
        with:
          path: node_modules
          key: ${{ runner.os }}-node${{ matrix.code }}-${{ hashFiles('**/package-lock.json') }}
      - name: Run Integration test suite
        run: |
          ls -lrt
          ## RUN INTEGRATION TEST
          cd jslib
          npm install --no-progress --silent --quiet
          echo "*************"
          VALIDATOR_OPERATOR_ADDRESS=$(cat ../chain-main/validatorDetails.json | jq '.address') COMMUNITY_ACCOUNT_MNEMONIC=$(cat ../chain-main/community.json | jq '.mnemonic') RESERVE_ACCOUNT_MNEMONIC=$(cat ../chain-main/reserve.json | jq '.mnemonic') ECOSYSTEM_ACCOUNT_MNEMONIC=$(cat ../chain-main/ecosystem.json | jq '.mnemonic') 
          echo $VALIDATOR_OPERATOR_ADDRESS
          echo $COMMUNITY_ACCOUNT_MNEMONIC
          echo $RESERVE_ACCOUNT_MNEMONIC
          echo $ECOSYSTEM_ACCOUNT_MNEMONIC
          echo "*************"
          VALIDATOR_OPERATOR_ADDRESS=$VALIDATOR_OPERATOR_ADDRESS COMMUNITY_ACCOUNT_MNEMONIC=$COMMUNITY_ACCOUNT_MNEMONIC RESERVE_ACCOUNT_MNEMONIC=$RESERVE_ACCOUNT_MNEMONIC ECOSYSTEM_ACCOUNT_MNEMONIC=$ECOSYSTEM_ACCOUNT_MNEMONIC npm run integration-test
